//小易有一些立方体，每个立方体的边长为1，他用这些立方体搭了一些塔。
//现在小易定义：这些塔的不稳定值为它们之中最高的塔与最低的塔的高度差。
//小易想让这些塔尽量稳定，所以他进行了如下操作：每次从某座塔上取下一块立方体，并把它放到另一座塔上。
//注意，小易不会把立方体放到它原本的那座塔上，因为他认为这样毫无意义。
//现在小易想要知道，他进行了不超过k次操作之后，不稳定值最小是多少。
//输入描述:
//第一行两个数n,k (1 <= n <= 100, 0 <= k <= 1000)表示塔的数量以及最多操作的次数。
//第二行n个数，ai(1 <= ai <= 104)表示第i座塔的初始高度。
//输出描述:
//第一行两个数s, m，表示最小的不稳定值和操作次数(m <= k)
//接下来m行，每行两个数x,y表示从第x座塔上取下一块立方体放到第y座塔上。


import java.util.*;
public class test22 {
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int k=sc.nextInt();
		int a[]=new int[n];
		for(int i=0;i<n;i++)
			a[i]=sc.nextInt();
		getResult(n, k, a);
		
	}
	public static void getResult(int n,int k,int []a){
		List<String>list=new ArrayList<String>();
		int max=0,min=0,i;
		for(i=0;i<k;i++){
			max=0;
			min=0;
			for(int j=0;j<n;j++){
				if(a[max]<a[j])
					max=j;
				if(a[min]>a[j])
					min=j;
			}
			a[max]--;
			a[min]++;
			list.add((max+1)+" "+(min+1));
		}
		Arrays.sort(a);
		System.out.println(a[a.length-1]-a[0]+" "+i);
		for(int x=0;x<list.size();x++)
			System.out.println(list.get(x));
		
	}

}
